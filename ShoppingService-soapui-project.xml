<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="08372675-4365-459f-a7df-b487e74d92c7" activeEnvironment="Default" name="ShoppingService" resourceRoot="${projectDir}" soapui-version="5.7.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="7f5fd836-e9f1-4133-a33f-bb064e7da478" wsaVersion="NONE" name="ShoppingServiceSoapBinding" type="wsdl" bindingName="{http://expertz.me/service/eCommerce/ShoppingService/1.0}ShoppingServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="file:/C:/Users/user/Downloads/Resources/ShoppingService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:\C:\Users\user\Downloads\Resources\ShoppingService.wsdl"><con:part><con:url>file:\C:\Users\user\Downloads\Resources\ShoppingService.wsdl</con:url><con:content><![CDATA[<definitions name="ShoppingService" targetNamespace="http://expertz.me/service/eCommerce/ShoppingService/1.0" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:sdt="http://expertz.me/data/eCommerce/ShoppingService/1.0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ss="http://expertz.me/service/eCommerce/ShoppingService/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://expertz.me/data/eCommerce/ShoppingService/1.0" schemaLocation="ShoppingService.xsd"/>
    </xsd:schema>
  </types>
  <message name="loginRequest">
    <part name="loginRequest" element="sdt:loginRequest"/>
  </message>
  <message name="loginResponse">
    <part name="sessionId" element="sdt:sessionId"/>
  </message>
  <message name="login_faultMsg">
    <part name="loginFault" element="sdt:faultMessage"/>
  </message>
  <message name="findRequest">
    <part name="findRequest" element="sdt:findRequest"/>
  </message>
  <message name="findResponse">
    <part name="findResponse" element="sdt:findResponse"/>
  </message>
  <message name="find_faultMsg">
    <part name="findFault" element="sdt:faultMessage"/>
  </message>
  <message name="purchaseRequest">
    <part name="purchaseRequest" element="sdt:purchaseRequest"/>
  </message>
  <message name="purchaseResponse">
    <part name="purchaseResponse" element="sdt:purchaseResponse"/>
  </message>
  <message name="purchase_faultMsg">
    <part name="purchaseFault" element="sdt:faultMessage"/>
  </message>
  <message name="logoutRequest">
    <part name="logoutRequest" element="sdt:logoutRequest"/>
  </message>
  <message name="logoutResponse">
    <part name="logoutResponse" element="sdt:logoutResponse"/>
  </message>
  <message name="logout_faultMsg">
    <part name="logoutFault" element="sdt:faultMessage"/>
  </message>
  <portType name="ShoppingServicePt">
    <operation name="login">
      <input message="ss:loginRequest"/>
      <output message="ss:loginResponse"/>
      <fault name="fault" message="ss:login_faultMsg"/>
    </operation>
    <operation name="logout">
      <input message="ss:logoutRequest"/>
      <output message="ss:logoutResponse"/>
      <fault name="fault" message="ss:logout_faultMsg"/>
    </operation>
    <operation name="find">
      <input message="ss:findRequest"/>
      <output message="ss:findResponse"/>
      <fault name="fault" message="ss:find_faultMsg"/>
    </operation>
    <operation name="purchase">
      <input message="ss:purchaseRequest"/>
      <output message="ss:purchaseResponse"/>
      <fault name="fault" message="ss:purchase_faultMsg"/>
    </operation>
  </portType>
  <binding name="ShoppingServiceSoapBinding" type="ss:ShoppingServicePt">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="login">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </fault>
    </operation>
    <operation name="logout">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="find">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="purchase">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="ShoppingService">
    <port name="ShoppingServicePort" binding="ss:ShoppingServiceSoapBinding">
      <soap:address location="http://localhost:8088/mockShoppingService"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\C:\Users\user\Downloads\Resources\ShoppingService.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://expertz.me/data/eCommerce/ShoppingService/1.0" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:smsg="http://expertz.me/data/eCommerce/ShoppingService/1.0">
  <xsd:element name="faultMessage" type="xsd:string"/>
  <xsd:complexType name="FaultMessage">
    <xsd:sequence>
      <xsd:element name="errorCode" type="xsd:string"/>
      <xsd:element name="errorDesc" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="sessionId" type="smsg:SessionId"/>
  <xsd:simpleType name="SessionId">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="PurchaseItem">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="purchaseRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sessionId" type="smsg:SessionId"/>
        <xsd:element name="purchaseItem" type="smsg:PurchaseItem"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="loginRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="username" type="xsd:string"/>
        <xsd:element name="password" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="logoutRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sessionId" type="smsg:SessionId"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="logoutResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="logoutMessage" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="findRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sessionId" type="xsd:string"/>
        <xsd:element name="findString" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="findResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="item" type="smsg:ItemType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="ItemType">
    <xsd:sequence>
      <xsd:element name="id" type="xsd:string"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="price" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="purchaseResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="purchaseStatus" type="smsg:PurchaseStatusType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="PurchaseStatusType">
    <xsd:sequence>
      <xsd:element name="id" type="xsd:string"/>
      <xsd:element name="stockStatus" type="xsd:string"/>
      <xsd:element name="expectedDelivery" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint></con:endpoints><con:operation id="2a7c8d77-81d6-46aa-a4ff-b28c2504963f" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find" name="find" bindingOperationName="find" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1f37b79b-8a15-43e5-8df8-3908bcc429d5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:findRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
         <ns:findString>?</ns:findString>\r
      </ns:findRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/></con:call></con:operation><con:operation id="ffe982fa-a88f-4a55-a978-1d6026cab9cd" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login" name="login" bindingOperationName="login" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0200175d-f322-48fa-9474-d91f6378bea8" name="invalid"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>?</ns:username>\r
         <ns:password>?</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/><con:wsrmConfig version="1.2"/></con:call><con:call id="0de7b40a-f0a8-4143-afed-9b32e101aa1d" name="valid"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>pratikaqh</ns:username>\r
         <ns:password>welcome</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="47c7c6bc-8fa4-4e5c-9379-e4e2f6fbce7f" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout" name="logout" bindingOperationName="logout" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ed68920a-4826-42a3-9e03-73e70ec47a3c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:logoutRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
      </ns:logoutRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="af86414b-7843-46de-9f6a-079fbfa3b16e" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase" name="purchase" bindingOperationName="purchase" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="34f11b24-d33e-4743-bab1-d95dd444403b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:purchaseRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
         <ns:purchaseItem>?</ns:purchaseItem>\r
      </ns:purchaseRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/></con:call></con:operation></con:interface><con:testSuite id="4dacdc06-dfbd-453b-b756-9490744a1ffe" name="ShoppingServiceSoapBinding TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5cb071ee-7dd8-4197-b72d-27c599c9813b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="find TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="27b5164a-3306-43d3-8e86-4c5bfcf67707" name="find"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="find" id="6d537e7f-cf7c-4039-b33b-0b39122bc49e"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:findRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
         <ns:findString>?</ns:findString>\r
      </ns:findRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="username and password properties" id="19ebcafc-10ac-4b61-afd9-53b9de57d07d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>rahul</con:value></con:property><con:property><con:name>password</con:name><con:value>welcome1</con:value></con:property></con:properties></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="54f63934-b957-4811-aa09-2d57c240c687" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="login TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="b86c5ddc-7688-41f1-9e10-fa2f6e340242" name="login"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login" id="1c86db4b-88c2-438b-943f-163693ebb15a"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>?</ns:username>\r
         <ns:password>?</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7536235b-84c9-4c25-9608-2a39c192d0ff" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="logout TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="77b572dd-e9ad-40c0-b4f4-71f4cfc21ba9" name="logout"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="logout" id="a51f8daa-4327-4081-95bd-14d8116f67c5"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:logoutRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
      </ns:logoutRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="11da7a4c-9251-44dd-b09d-d4c0244b9eac" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="purchase TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="a8e8c889-7df8-48cf-844c-78dfac55ca0b" name="purchase"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>purchase</con:operation><con:request name="purchase" id="c55960d6-8a72-4535-a419-2681b3870407"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:purchaseRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
         <ns:purchaseItem>?</ns:purchaseItem>\r
      </ns:purchaseRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="65d00f69-dba2-4f07-a171-4f681a788d5f" name="Functional"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="975bbe9b-dec3-4f80-af12-59bd4c790371" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="traditional login and logout" searchProperties="true"><con:settings/><con:testStep type="properties" name="username and password properties" id="d472a269-ddd1-4458-b1b9-28eafa7f0dbb"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>rahul</con:value></con:property><con:property><con:name>password</con:name><con:value>welcome1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="username and password transfer" id="ccf17736-93d4-4a48-8097-1a40a32ce699"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>username and password properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>login</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:username
</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passwrod</con:name><con:sourceType>password</con:sourceType><con:sourceStep>username and password properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>login</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
//*:password
</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="login" id="b74d845f-2d49-4ca8-861d-4602b276059a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login" id="ece9dd0a-14f8-4858-8841-6b3e3d1982f1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:loginRequest>
         <ns:username>rahul</ns:username>
         <ns:password>welcome1</ns:password>
      </ns:loginRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="81627fc4-431e-4a0c-8c53-a4e639bce023"/><con:assertion type="Schema Compliance" id="6fe2f289-116b-456d-ae4a-3a6b2461318b"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="ab7203e5-6676-4c1d-a14b-eb57d36eb7c8"/><con:credentials><con:password xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="findString properties" id="cedac0a0-f70f-4fc3-adc9-2c17b7148fdb"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>findString</con:name><con:value>Android Tablet</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="findString Transfer" id="d50d52d3-f604-4991-9224-5069a83794b7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>login</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
//*:sessionId
</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Find</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
//*:sessionId</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>findString</con:name><con:sourceType>findString</con:sourceType><con:sourceStep>findString properties</con:sourceStep><con:sourcePath/><con:targetType>Request</con:targetType><con:targetStep>Find</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:findString</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Find" id="31d3634b-fd23-4935-b0e3-5dc8937f20e1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="Find" id="47705d56-129e-4115-a5fb-f13192eb3eaf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:findRequest>
         <ns:sessionId>26333080747376447</ns:sessionId>
         <ns:findString>Android Tablet</ns:findString>
      </ns:findRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a9117ca8-7ba1-46a9-bab9-bd06ad15e92c"/><con:assertion type="Schema Compliance" id="c729169b-f710-4e4e-b0ea-2a1a70b94175"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="26d324e8-14f1-43e8-93e5-027765d7a0c8"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="purchaseItem Properties" id="54e6af4e-a87b-43fb-8bc7-9850f4853b4e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>purchaseItem</con:name><con:value>Android Tablet</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="purchaseItem transfer" id="de0d02c7-ba17-4517-b03a-94128a1be8dc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>login</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
//*:sessionId
</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>purchase</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
//*:sessionId</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>purchaseItem</con:name><con:sourceType>purchaseItem</con:sourceType><con:sourceStep>purchaseItem Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>purchase</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
 //*:purchaseItem</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="purchase" id="5951ebba-16ec-472c-ae0d-e4beac40d46f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>purchase</con:operation><con:request name="purchase" id="7ea61654-640f-4b6c-9464-db54413c1fa1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:purchaseRequest>
         <ns:sessionId>26333080747376447</ns:sessionId>
         <ns:purchaseItem>Android Tablet</ns:purchaseItem>
      </ns:purchaseRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0396e6af-c448-42e6-bdab-a7329b1092a6"/><con:assertion type="Schema Compliance" id="cda4a971-c4b0-4cc2-a67c-1fec6126e428"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="dad8629f-91e3-40bf-9535-0cea07ef1b73"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Logout Transfer" id="3d02aca4-8b08-4d67-8e58-8dec6cb6cd13"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sessionId</con:name><con:sourceType>Request</con:sourceType><con:sourceStep>Find</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
//*:sessionId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Logout</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
//*:sessionId</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Logout" id="266f8795-12da-4e54-b743-390065368669"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Logout" id="50b81cf1-20a5-492e-80a6-48dfe2a2d7d9"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:logoutRequest>
         <ns:sessionId>26333080747376447</ns:sessionId>
      </ns:logoutRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="51b0fdff-11e9-41b4-8589-54f69d4a5345"/><con:assertion type="Schema Compliance" id="ab35f25b-debe-4465-95b2-c3fb7690a76e"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="88428fa8-e0f9-486a-9292-8af1baecafcf"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b59967b5-31a4-4436-b610-fe5844b60ac2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="property expansion" searchProperties="true"><con:settings/><con:testStep type="properties" name="username and password properties" id="efad1323-1a7d-40ca-b81d-bfbff9621a32"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>balisha</con:value></con:property><con:property><con:name>password</con:name><con:value>welcome6</con:value></con:property><con:property><con:name>item</con:name><con:value>Android Tablet</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="login" id="0530378f-0bc1-48a7-80b6-817af45ba81f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login" id="ece9dd0a-14f8-4858-8841-6b3e3d1982f1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:loginRequest>
         <ns:username>${username and password properties#username}</ns:username>
         <ns:password>${username and password properties#password}</ns:password>
      </ns:loginRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="81627fc4-431e-4a0c-8c53-a4e639bce023"/><con:assertion type="Schema Compliance" id="6fe2f289-116b-456d-ae4a-3a6b2461318b"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="ab7203e5-6676-4c1d-a14b-eb57d36eb7c8"/><con:credentials><con:password xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="find" id="383aacf9-b121-4e4c-9b30-227abcb12c0f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="find" id="6fbd73f5-14c5-4cbd-b875-6d636ec32e2f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:findRequest>\r
         <ns:sessionId>${login#Response#//*:sessionId}</ns:sessionId>\r
         <ns:findString>${username and password properties#item}</ns:findString>\r
      </ns:findRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="db6e0538-30ca-4783-8475-5b9a8d66b739"/><con:assertion type="Schema Compliance" id="57c9846c-9678-4102-8e02-4079b25c01b0"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="77ca3402-81a8-45b2-9dcb-4b759738e53c"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="purchase" id="89c0fd65-0d3e-4f58-b60e-c75a0d4a7281"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>purchase</con:operation><con:request name="purchase" id="6a361fa1-768c-4952-94d0-4f78f61f2cc3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:purchaseRequest>\r
         <ns:sessionId>${login#Response#//*:sessionId}</ns:sessionId>\r
         <ns:purchaseItem>${username and password properties#item}</ns:purchaseItem>\r
      </ns:purchaseRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a99094b0-d73d-4655-91fc-085afdabd055"/><con:assertion type="Schema Compliance" id="02b733d9-0845-47f3-ae7b-195e6e91ec8e"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="26effe2c-6490-4ac3-b848-708382666114"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Logout" id="2d2886a1-6fe5-40c8-beb7-01e33e94baa8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Logout" id="50b81cf1-20a5-492e-80a6-48dfe2a2d7d9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:logoutRequest>
         <ns:sessionId>${login#Response#//*:sessionId}</ns:sessionId>
      </ns:logoutRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="51b0fdff-11e9-41b4-8589-54f69d4a5345"/><con:assertion type="Schema Compliance" id="ab35f25b-debe-4465-95b2-c3fb7690a76e"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="88428fa8-e0f9-486a-9292-8af1baecafcf"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e4869fdd-31d1-4e48-845e-4347d18a4a78" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Script Based Execution" searchProperties="true"><con:settings/><con:testStep type="properties" name="username and password properties" id="79092327-80a3-4f9b-b52a-e30c35c98162"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>madhu</con:value></con:property><con:property><con:name>password</con:name><con:value>welcome5</con:value></con:property><con:property><con:name>findString</con:name><con:value>Android Tablet</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="Login" id="12a030cf-3b65-4ea4-86ba-0af1124e7bdc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Login" id="b296a06f-684a-41cf-9ded-1a19dc62d7bf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>${username and password properties#username}</ns:username>\r
         <ns:password>${username and password properties#password}</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="66dc405b-b607-42c2-b618-4a39c535e8d1"/><con:assertion type="Schema Compliance" id="319a9780-cac0-40fa-b93e-43ea50b62388"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="7ca217ab-553f-42f4-9fe2-7e08ba8a9f3d"/><con:assertion type="GroovyScriptAssertion" id="f6699d02-3f74-41da-8dbe-6a236db15fb8" name="get and store the response"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
//i am going to write a groovy script to capture the response and fetch the sessionID and stor it in test case/test suite level
//i have cretead a varibale called response
//i want to fetch the entire response and store it in this variable
def response = context.testCase.getTestStepByName('Login').getPropertyValue("Response")
//holder
//i want to store this entire response in a holder
//so that i can get a specify data and storeit again
def holder = new XmlHolder(response)
//get node value is used when i want to fetch a specific response data
def sess = holder.getNodeValue("//*:sessionId")
//i want to store this session id in test suite level sothat i can use it in all my test case
context.testCase.testSuite.setPropertyValue("sessionId",sess)
//can i store it in the test case
context.testCase.setPropertyValue("sessionId",sess)
//i want to access this acroos project level
context.testCase.testSuite.project.setPropertyValue("sessionId",sess)</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="find" id="807dd6e6-e5cd-4909-9065-658693c5d945"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="find" id="a80f8437-166e-4e5c-92ab-339123f846df"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:findRequest>\r
         <ns:sessionId>${#Project#sessionId}</ns:sessionId>\r
         <ns:findString>${username and password properties#findString}</ns:findString>\r
      </ns:findRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1c08f7b2-a9a8-47fe-b088-61bb2124571c"/><con:assertion type="Schema Compliance" id="501cddc0-5266-4a59-ab8c-3bc919eef8c9"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="7f3fa684-52ca-4602-b8fd-e4821c38042d"/><con:assertion type="GroovyScriptAssertion" id="4b6a5d24-a0ac-4b9a-9263-aea5fccb2088" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
def response = context.testCase.getTestStepByName("find").getPropertyValue("Response")
def holder = new XmlHolder(response)
def item = holder.getNodeValue("//*:description")
context.testCase.setPropertyValue("description",item)</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="to purchase or not to purchase" id="062090a2-8916-4909-a7f3-82fe50d167d7"><con:settings/><con:config><script>//to fetch the username

def username = context.expand('${Login#Request#//*:username}')

//next step

if(username!="pratik")
{
	log.info"no purchase"
	//if I want to skip any step then I do this
	testRunner.gotoStepByName("logout")
}
else
{
	log.info"proceed to purchase"
}</script></con:config></con:testStep><con:testStep type="request" name="purchase" id="c4f7f4fb-b58f-4dc6-95e2-4ce8df21950a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>purchase</con:operation><con:request name="purchase" id="eccb8adb-e838-4132-8c63-8a727e3d0ede"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:purchaseRequest>\r
         <ns:sessionId>${#TestCase#sessionId}</ns:sessionId>\r
         <ns:purchaseItem>${#TestCase#description}</ns:purchaseItem>\r
      </ns:purchaseRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="939caf81-534c-4c48-9019-ebee403bfcb8"/><con:assertion type="Schema Compliance" id="ebd594fe-8a58-40a0-b2b7-859cdc72551b"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="104eb387-b89b-400e-ac57-fb92ca74ba35"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="logout" id="d6d93de2-8a76-478b-a6b8-8d1328707d55"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="logout" id="caa7e4ba-d6fc-4e24-b612-60be454f311e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:logoutRequest>\r
         <ns:sessionId>${#Project#sessionId}</ns:sessionId>\r
      </ns:logoutRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b3d03739-f8ab-46df-8983-84ea0e2c5521"/><con:assertion type="Schema Compliance" id="db5c0f5d-83ed-4026-8265-43642e442f75"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="15c0ff20-62f4-47c2-8321-29a6eb4cc829"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>sessionId</con:name><con:value>44529203409912044</con:value></con:property><con:property><con:name>description</con:name><con:value>Android Tablet</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>sessionId</con:name><con:value>44529203409912044</con:value></con:property></con:properties></con:testSuite><con:testSuite id="c0454820-4cd4-4bcb-a34d-91494bb29637" name="System Testing"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="d2f77195-ff3a-4b03-aade-2d776f5cb21c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="System Testing" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="784d04f6-3f43-4560-a895-26e94fa28af9"><con:settings/><con:config><script>def tc = testRunner.testCase.testSuite.project.testSuites["Functional"].testCases["property expansion"]
tc.testSteps["username and password properties"].setPropertyValue("username","pratik")
tc.testSteps["username and password properties"].setPropertyValue("password","Welcome1")
//this line will execute the entire testcase
def runner = tc.run(null,false)
def teststeplist = tc.getTestStepList()
//log.info TSL
//i want see the names of the my test steps
teststeplist.each
{
	def tsname = it.name
	log.info tsname
	//fetch the currect step which i am executing
	//log.info tc.getCurrentStep().name
}
//i want to know the status of my execution
//this will provide me the execution status
log.info "Status: $runner.status "
//This will provide me the time taken forexecution
log.info "TimeTaken: $runner.timeTaken"
//i want to know the number of steps executed
log.info "Number of Steps executed is :" + runner.results.size()
//Assert
assert runner.results.size()==5







</script></con:config></con:testStep><con:testStep type="groovy" name="System Testing" id="2a2154e5-dc7c-4b2e-bf59-012651732e77"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
//From here i want to execute Script Based Execution
//if i want to run script based execution from here i have to use Test Runner
//coz it is in different test suite
//to fetch the username

def username = context.expand('${Login#Request#//*:username}')

//next step


def tc = testRunner.testCase.testSuite.project.testSuites["Functional"].testCases["Script Based Execution"]
tc.testSteps["username and password properties"].setPropertyValue("username","pratik")
tc.testSteps["username and password properties"].setPropertyValue("password","Welcome")

//i am running the entire test case by changing the data
//if you are running more then one step in testcase
//you have to say null means there is no context and false is coz i am not checking any condition

tc.run(null,false)
//i want to check what all the steps got executed

def teststeplist = tc.getTestStepList()
log.info teststeplist.size()
//log.info TSL
//i want see the names of the my test steps

teststeplist.each
{
	def tsname = it.name
	log.info tsname
	//fetch the currect step which i am executing
	//log.info tc.getCurrentStep().name
}
if(username!="pratik")
{
	log.info"no purchase"
	//if I want to skip any step then I do this
	testRunner.gotoStepByName("logout")
}
else
{
	log.info"proceed to purchase"
}</script></con:config></con:testStep><con:testStep type="groovy" name="Data driven" id="1afbeff8-7035-41a5-a544-37955518330a"><con:settings/><con:config><script>//jxl is a jar which helps connect to the excel toread and write data for me
//since i am a tester i read data
import jxl.*
def filepath = "C:/Users/user/Desktop/Test Data.xls"
def username,password
//where the file is to read
File Excel = new File(filepath)
//excelsheet basically it contains workbook and sheets
//i have to get the workbook
Workbook wb = Workbook.getWorkbook(Excel)
//i am trying to get the sheet
Sheet sh = wb.getSheet("Sheet1")
def row = sh.getRows().toInteger()
def column = sh.getColumns().toInteger()
log.info "The number of rows are $row and The Number of column are $column"

//I want to fetch the data in each row and column
for(def i=0;i&lt;row;i++)
{
	for(def j=0;j&lt;column;j++)
	{
		if(j==0)
		{
			username=sh.getCell(j,i).getContents()
		}
		else
		{
			password = sh.getCell(j,i).getContents()
		}
	}
	log.info"$username and $password"
}

def tc = testRunner.testCase.testSuite.project.testSuites["Functional"].testCases["Script Based Execution"]
tc.testSteps["username and password properties"].setPropertyValue("username",username)
tc.testSteps["username and password properties"].setPropertyValue("password",password)
//this line will execute the entire testcase
def runner = tc.run(null,false)
def teststeplist = tc.getTestStepList()
//log.info TSL
//i want see the names of the my test steps
teststeplist.each
{
	def tsname = it.name
	log.info tsname
	//fetch the currect step which i am executing
	//log.info tc.getCurrentStep().name
}
//i want to know the status of my execution
//this will provide me the execution status
log.info "Status: $runner.status "
//This will provide me the time taken forexecution
log.info "TimeTaken: $runner.timeTaken"
//i want to know the number of steps executed
log.info "Number of Steps executed is :" + runner.results.size()
//Assert
assert runner.results.size()==5









</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fcb3d37e-3e58-49dc-8007-67801d37f149" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Database Testing" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="JDBC Request" id="33f5753f-d853-47bc-b038-5f42dfd28a27"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.mysql.jdbc.Driver</con:driver><con:connectionString> jdbc:mysql://localhost:3306/funtionaltesting?user=root&amp;password=root</con:connectionString><con:query>select * from login</con:query><con:properties/></con:config></con:testStep><con:testStep type="request" name="login" id="ff081eec-e029-48ae-98d9-ea861b2be836"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login" id="53c6d515-e822-4368-bd79-fbd286c9a519"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>${JDBC Request#ResponseAsXml#//ResultSet/Row[1]/LOGIN.NAME}</ns:username>\r
         <ns:password>${JDBC Request#ResponseAsXml#//ResultSet/Row[1]/LOGIN.PASSWORD}</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b8eb36b6-f9ca-4fc8-84d0-a6a112b74b8f"/><con:assertion type="Schema Compliance" id="894c6047-ff53-4398-9ed4-770ed5b1e2d6"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="5d667eb0-683a-403f-a5d6-7800c6982bac"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="logout" id="e29d592a-63bc-496a-9122-4598c48e1a90"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="logout" id="dc9228b5-cc8c-458f-adb8-a85f7d3b41b0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-CH47220:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:logoutRequest>\r
         <ns:sessionId>${login#Response#//*:sessionId}</ns:sessionId>\r
      </ns:logoutRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="80db0ff3-0a31-41c2-9390-e3548843603e"/><con:assertion type="Schema Compliance" id="ee67b2d3-a5fc-46bb-8932-bd883256d993"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="894d9a20-2dc2-4ffe-80a5-5dab220ed784"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:mockService port="8088" path="/mockShoppingService" host="chethan-PC" name="ShoppingServiceSoapBinding MockService" bindToHostOnly="false" docroot="" id="112e119d-7beb-4c9e-bbd8-085089be6f64"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:mockOperation name="find" interface="ShoppingServiceSoapBinding" operation="find" id="ab5d77a3-600b-401a-a921-abc495884451"><con:settings/><con:dispatchPath>// Util variables to access the xml data
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the session ID
def sessionid = holder.getNodeValue( "//*:sessionId" )

// check if its a valid session
if( !context.hasProperty( sessionid )){
	// If not a valid session ID, set the relevant fault message
	requestContext.faultCode = 'APP006'
	requestContext.faultShortDesc = 'Invalid Session'
	requestContext.faultCausedBy = 'Auth System'
	requestContext.faultDesc = 'Invalid Session ID. Session does not exist or has timed out.'
	return "Fault Find"
}

// Get the query string
def itemDesc = holder.getNodeValue( "//*:findString" )

// This is our item list. Feel free to add more items if you want...
def itemList = [ : ]
itemList["Android Tablet"] = [id:1, desc: "Android Tablet", price: "40 GBP" ,stockStatus: "100", expectedDelivery: "30-JUL-2012"]
itemList["iPad v1"] = [id:2, desc: "iPad v1", price: "540 GBP"  ,stockStatus: "50", expectedDelivery: "30-JUL-2012"]
itemList["iPad v2"] = [id:3, desc: "iPad v2", price: "800 GBP"  ,stockStatus: "10", expectedDelivery: "30-AUG-2012"]


//def itemList = context.getProperty("itemList")

// Check if we have an item with the same description as the search string
if(itemList.containsKey(itemDesc)){
	// Populate item details and send success message
	def item = itemList[itemDesc]
	requestContext.itemId = item.id
	requestContext.itemDescription = item.desc
	requestContext.itemPrice = item.price
	return "Successful Find"
}

// We couldn't find a particular item for the search. 
//In the demo we don't support generic queries. So send a fault message
requestContext.faultCode = 'APP007'
requestContext.faultShortDesc = 'Invalid Query'
requestContext.faultCausedBy = 'Search System'
requestContext.faultDesc = 'In the demo we do not support generic queries and we could not find any items with the given string!!!'
return "Fault Find"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Successful Find" encoding="UTF-8" id="e4770256-6bec-432c-8413-495bfeca2bab" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:findResponse>
         <ns:item>
            <ns:id>${itemId}</ns:id>
            <ns:description>${itemDescription}</ns:description>
            <ns:price>${itemPrice}</ns:price>
         </ns:item>
      </ns:findResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/></con:response><con:response name="Fault Find" encoding="UTF-8" id="77c43a4f-e3d1-425c-8e08-c6571d7dffb5" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
      ${faultDesc}
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="login" interface="ShoppingServiceSoapBinding" operation="login" id="be543267-bc4b-40e8-944c-5a5e978c9e32"><con:settings/><con:dispatchPath>// Initialize Util classes to retrieve XML value
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the username and Password values provided
def username = holder.getNodeValue( "//*:username" )
def password = holder.getNodeValue( "//*:password" )

// validate by checking that the User is not already logged in
// Username is of required length and Password doesn't end with 123!!!
if( context.hasProperty( username )  || username.length() > 10 || username.length() &lt; 3 || password.endsWith( "123" )){
	// If user is already loggged in, set different fault codes compared to others
	if(context.hasProperty( username )){
		requestContext.faultCode = 'APP001'
		requestContext.faultShortDesc = 'Already Logged In'
		requestContext.faultCausedBy = 'Auth System'
		requestContext.faultDesc = 'User is already logged in. If you want to login as another user logout first'
	}
	else{
		// Set relevant error code and desc. For the demo, we will keep it simple
		requestContext.faultCode = 'APP002'
		requestContext.faultShortDesc = 'Invalid Login Credentials'
		requestContext.faultCausedBy = 'Auth System'
		requestContext.faultDesc = 'Invalid Login Credentials. Please try again.'
	}
	// Specify which response to send back
	return "Fault Login"	
}

// Seems like a valid request, so generate session ID
// Note that we don't do password verification in the demo
def sessionid = String.valueOf( Math.random() ).substring( 2 )

// Set the user name and session ID as valid sessions and logged in user in context
// This helps in looking up to see if the user is logged in or if this is a valid session ID
context.setProperty( username, sessionid )
context.setProperty( sessionid, username )

requestContext.sessionid = sessionid
return "Successful Login"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Successful Login</con:defaultResponse><con:response name="Successful Login" encoding="UTF-8" id="69ce20a8-4193-4d1d-ae56-7a14b895d337" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:sessionId>${sessionid}</ns:sessionId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/></con:response><con:response name="Fault Login" encoding="UTF-8" id="88b8dad8-3f84-4b18-b7b9-00a6d71e1dd1" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
        <ns:faultMessage>${faultDesc}</ns:faultMessage>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>
]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="logout" interface="ShoppingServiceSoapBinding" operation="logout" id="8894516a-490d-446f-af79-a2ed2d01ee74"><con:settings/><con:dispatchPath>// Util variables to access the xml data
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the session ID
def sessionid = holder.getNodeValue( "//*:sessionId" )

// check if its a valid session
if( !context.hasProperty( sessionid )){
	// If not a valid session ID, set the relevant fault message
	requestContext.faultCode = 'APP003'
	requestContext.faultShortDesc = 'Invalid Session'
	requestContext.faultCausedBy = 'Auth System'
	requestContext.faultDesc = 'Invalid Session ID. Session does not exist or has timed out.'
	return "Fault Logout"
}

// logout from the system by removing the relevant context
context.removeProperty( context.getProperty( sessionid ))
context.removeProperty( sessionid )
requestContext.logoutMessage = "Successfully logged out of the system."

return "Successful Logout"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Successful Logout" encoding="UTF-8" id="be928dc9-cff2-4abe-8c8b-6119a051cc58" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:logoutResponse>
         <ns:logoutMessage>${logoutMessage}</ns:logoutMessage>
      </ns:logoutResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/></con:response><con:response name="Fault Logout" encoding="UTF-8" id="ea130cdd-916d-47c0-a4b8-0bfa38559770" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
      ${faultDesc}
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="purchase" interface="ShoppingServiceSoapBinding" operation="purchase" id="b05c95cc-33bc-4564-9a38-c8f1d69f8f98"><con:settings/><con:dispatchPath>// Util variables to access the xml data
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the session ID
def sessionid = holder.getNodeValue( "//*:sessionId" )

// check if its a valid session
if( !context.hasProperty( sessionid )){
	// If not a valid session ID, set the relevant fault message
	requestContext.faultCode = 'APP010'
	requestContext.faultShortDesc = 'Invalid Session'
	requestContext.faultCausedBy = 'Auth System'
	requestContext.faultDesc = 'Invalid Session ID. Session does not exist or has timed out.'
	return "Fault Find"
}

// Get the query string
def itemDesc = holder.getNodeValue( "//*:purchaseItem" )

// This is our item list. Feel free to add more items if you want...
def itemList = [ : ]
itemList["Android Tablet"] = [id:1, desc: "Android Tablet", price: "40 GBP" ,stockStatus: "100", expectedDelivery: "30-JUL-2012"]
itemList["iPad v1"] = [id:2, desc: "iPad v1", price: "540 GBP"  ,stockStatus: "50", expectedDelivery: "30-JUL-2012"]
itemList["iPad v2"] = [id:3, desc: "iPad v2", price: "800 GBP"  ,stockStatus: "10", expectedDelivery: "30-AUG-2012"]


//def itemList = context.getProperty("itemList")

// Check if we have an item with the same description as the search string
if(itemList.containsKey(itemDesc)){
	// Populate item details and send success message
	def item = itemList[itemDesc]
	requestContext.itemId = item.id
	requestContext.itemStockStatus = item.stockStatus
	requestContext.itemExpectedDelivery = item.expectedDelivery
	return "Successful Purchase"
}

// We couldn't find a particular item for the search. 
//In the demo we don't support generic queries. So send a fault message
requestContext.faultCode = 'APP011'
requestContext.faultShortDesc = 'Invalid Item'
requestContext.faultCausedBy = 'Purchase System'
requestContext.faultDesc = 'In the demo we do not support bulk buys or add to cart kind of operations. We could not find any items with the given name!!!'
return "Fault Purchase"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Successful Purchase" encoding="UTF-8" id="3b6676aa-cba9-4b8a-b366-98bc19a3c4bf" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:purchaseResponse>
         <ns:purchaseStatus>
            <ns:id>${itemId}</ns:id>
            <ns:stockStatus>${itemStockStatus}</ns:stockStatus>
            <ns:expectedDelivery>${itemExpectedDelivery}</ns:expectedDelivery>
         </ns:purchaseStatus>
      </ns:purchaseResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/></con:response><con:response name="Fault Purchase" encoding="UTF-8" id="621662cb-665d-432c-9269-56152684537b" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
      	${faultDesc}
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/></con:response><con:dispatchConfig/></con:mockOperation><con:startScript>/*
def itemList = [ : ]
itemList["Android Tablet"] = [id:1, desc: "Android Tablet", price: "40 GBP" ]
itemList["iPad v1"] = [id:2, desc: "iPad v1", price: "540 GBP" ]
itemList["iPad v2"] = [id:3, desc: "iPad v2", price: "800 GBP" ]

context.setProperty("itemList", itemList)
*/</con:startScript><con:properties/></con:mockService><con:properties><con:property><con:name>sessionId</con:name><con:value>44529203409912044</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>